{
    "name": "notepadqq",
    // remove configure script to run autoreconf
    "rm-configure": true,
    "no-autogen": true,
    //"no-parallel-make": true,
    //"builddir": true,
    //"config-opts": [
    //    "--prefix=/app"
    //],
    "build-options": {
        "env": {
            "QMAKEPATH": "QMAKEPATH:/app/lib"
        }
    },
    "sources": [
        {
            "type": "archive",
            //"url": "https://github.com/notepadqq/notepadqq/archive/v1.4.0.tar.gz",
            //"sha256": "f295353224848c06fafcc71c7f6a38780a98890075ab33f0179181ebf21bad08"
            "url": "https://github.com/notepadqq/notepadqq/archive/v1.4.4.tar.gz",
            "sha256": "b071646c1447b57c128cd2ca19fc3e43c23e91f4e784223aa84486350a30d02c"
        },
        {
            "type": "shell",
            "commands": [
                "mkdir -p 'src/editor/libs/codemirror/mode/m4';"
            ]
        },
        {
            "type": "shell",
            "commands": [
                "ln -s '/app/include/QtWebKitWidgets/qwebframe.h' '/app/include/QtWebKitWidgets/QWebFrame.h';"
            ]
        },
        {
            "type": "shell",
            "commands": [
                "qmake INCLUDEPATH+=/app/include/QtWebKitWidgets INCLUDEPATH+=/app/include/QtWebKit QMAKE_LIBDIR+=/app/lib PREFIX=/app LRELEASE=lrelease *.pro;"
            ]
        }
    ],
    "post-install": [
        // manuals
        "echo 'post-install: symlink';",
        "ln -sf '/app/lib/notepadqq/notepadqq-bin' '/app/bin/notepadqq'",
        // desktop files
        "echo 'post-install: desktop files';",
        "app_id='com.notepadqq.Notepadqq';
        desktop-file-edit --set-key=Icon --set-value=\"${app_id}\" /app/share/applications/*.desktop;
        desktop-file-edit --remove-key=OnlyShowIn /app/share/applications/*.desktop;", /**/
        // metainfo/appdata - https://fedoraproject.org/wiki/Packaging:AppData
        "echo 'post-install: metainfo';",
        "echo 'setting up xmlstarlet';
        xmlstarlet_home='/app/opt/xmlstarlet';
        xmlstarlet_bin=\"${xmlstarlet_home}/bin\";
        if [[ -n \"${PATH}\" ]]; then
          PATH=\"${PATH}:${xmlstarlet_bin}\";
        else
          PATH=\"${xmlstarlet_bin}\";
        fi;
        export PATH;
        app_version=\"$( grep -Ei \"^[[:blank:]]*version[[:blank:]]*:[[:blank:]]*'([^']*)'*[[:blank:]]*$\" 'snap/snapcraft.yaml' 2>/dev/null | tail -n 1 2>/dev/null | sed -re \"s/^[[:blank:]]*version[[:blank:]]*:[[:blank:]]*'([^']*)'*[[:blank:]]*$/\\1/\" 2>/dev/null || : )\";
        app_date=\"$( date --reference 'src' -u '+%Y-%m-%d' 2>/dev/null || : )\";
        find '/app/share/metainfo' -mindepth 1 -maxdepth 1 -xtype f -name '*.appdata.xml' | sort -V | while read -r filename; do
            echo 'fixing xml declaration';
            sed -r -i '1 s/^[[:blank:]]+//' \"${filename}\" || :;
            echo 'removing invalid tag';
            xmlstarlet ed --inplace -d '/component/icon' \"${filename}\" || :;
            if [[ -n \"${app_version}\" && -n \"${app_date}\" ]]; then
                need_fix='0';
                xmlstarlet sel -t -v '/component/releases/release/@version' \"${filename}\" || need_fix='1';
                if [[ \"${need_fix}\" -ne \"0\" ]]; then
                    echo 'updating release info';
                    xmlstarlet ed --inplace -d '/component/releases' -s '/component' -t elem -n 'releases' -s '/component/releases' -t elem -n 'release' -s '/component/releases/release' -t attr -n 'date' -v \"${app_date}\" -s '/component/releases/release' -t attr -n 'version' -v \"${app_version}\" \"${filename}\";
                    xmlstarlet sel -t -c '/component/releases/release' \"${filename}\" | sed -re 's/$/\\n/' || :;
                fi;
            fi;
            app_id='com.notepadqq.Notepadqq';
            if [[ -n \"${app_id}\" ]]; then
                xmlstarlet ed --inplace -d '/component/id' -s '/component' -t elem -n 'id' -v \"${app_id}\" \"${filename}\";
                need_fix='0';
                xmlstarlet sel -t -v '/component/launchable' \"${filename}\" || need_fix='2';
                if [[ \"${need_fix}\" -ne \"0\" ]]; then
                    echo 'adding additional tags';
                    xmlstarlet ed --inplace -d '/component/launchable' -s '/component' -t elem -n 'launchable' -v \"${app_id}\" -s '/component/launchable' -t attr -n 'type' -v 'desktop-id' \"${filename}\";
                    xmlstarlet sel -t -c '/component/launchable' \"${filename}\" | sed -re 's/$/\\n/' || :;
                fi;
            fi;
        done;",
        // validate data
        "echo 'post-install: validate data';",
        "cat /app/share/applications/*.desktop;",
        "desktop-file-validate /app/share/applications/*.desktop || :;",
        "cat /app/share/metainfo/*.appdata.xml;",
        "appstream-util validate-relax --nonet /app/share/metainfo/*.appdata.xml || :;"
    ]
}
